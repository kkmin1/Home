<head>
<meta charset="utf8">
<link rel="stylesheet" type="text/css" href="code.css">
</head>



<pre id="c1">
// 주석
// 확장자 *.c
// 컴파일 >> gcc hello.c  ==> 기본으로 리눅스는  a.out 또는 윈도우는 a.exe 파일이 자동으로 생성
// 리눅스 실행  >> ./a.out
// 윈도우 실행  >> a.exe
// 실행 파일명을 지정하고 싶은 경우
// 컴파일 >> gcc -o hello.out hello.c
// 리눅스 실행  >> ./hello.out
// 윈도우 실행  >> hello.exe

#include &lt;stdio.h>

int main()
{
    int sum = 1560, n = 23, age = 24; // 정수형 변수 선언
    float average; // 실수형 변수 선언
    char name[] = "홍길동", hello[] = "hello C!"; // 문자열형 변수는 배열로 선언
    
    printf("안녕하세요!\n");  // \n 은 줄바꿈 표시
    printf("내 이름은 ");  // 개행 없음
    printf("%s이고 나이는 %d살입니다.\n", name, age);
    
    // 형식제어문자
    // %d:  정수, %f: 실수, %c: 단일문자, %s: 문장 또는 문자들
    average = (float)sum/n; //(float)는 정수형을 실수형으로 형 변환
    printf("반평균은 %.2f점입니다.\n", average); //.2f는 소수점 이하 두째 자리까지 출력
    
    puts("hello world!"); // 자동 개행
    puts(hello); // 공백 포함 문장을 변수로 출력
    
    return 0;
}
</pre>

<pre id="c2">
#include &lt;stdio.h>

int main()
{
    int age, year;
    char name[100];
    
    printf("출생년도와 나이, 이름을 입력하세요: ");
    scanf("%d %d %s", &year, &age, name);    // 입력을 받아서 변수에 저장
    puts("");
    printf("당신은 %d년 생이고, 이름은 %s이며, 나이는 %d살입니다.", year, name, age);
  
    return 0;
}
</pre>

<pre id="c3">
#include &lt;stdio.h>

void star1(char, char, int); // 삼각형 1
void star2(char, char, int); // 삼각형 2
void star3(char, char, int); // 삼각형 3
void star4(char, char, int); // 삼각형 4
void star5(char, char, int); // 피라미드형
void star7(char, char, int); // 마름모
void star8(char, char, int); // 모래시계

int isValidLine(int);
int i, j, cnt = 0;
char star = '*'; // 단일 문자는 싱글 따옴표를 써야함
char spc = ' ';
int num; // 홀수 입력

int main() {

	printf("3 이상의 홀수 정수를 입력하세요: ");
	scanf("%d", &num);
	printf("\n");

	if (num <= 2 || num % 2 == 0){
	   printf("3 이상의 홀수를 입력하세요");
	   return 0;
	   }
	else
	star1(star, spc, num);
	star2(star, spc, num);
	star3(star, spc, num);
	star4(star, spc, num);
	star5(star, spc, num);
	star7(star, spc, num);
	star8(star, spc, num);
	return 0;
}

void star1(char ch1, char ch2, int line) {
	printf("%d. 왼쪽 붙은 직각삼각형\n", ++cnt);
	printf("\n");
	
	for (i = 0; i < line; i++) {
		for (j = 0; j < line; j++) {
			if (j <= i)
				printf("%c", ch1);
			else
				printf("%c", ch2);
		}
		printf("\n");
	}
	printf("\n");
}

void star2(char ch1, char ch2, int line) {
	printf("%d. 왼쪽 붙은 역직각삼각형\n", ++cnt);
	printf("\n");
	
	for (i = 0; i < line; i++) {
		for (j = line - 1; j >= 0; j--) {
			if (j >= i)
				printf("%c", ch1);
			else
				printf("%c", ch2);
		}
		printf("\n");
	}
	printf("\n");
}

void star3(char ch1, char ch2, int line) {
	printf("%d. 오른쪽 붙은 직각삼각형\n", ++cnt);
	printf("\n");
	
	for (i = 0; i < line; i++) {
		for (j = line - 1; j >= 0; j--) {
			if (j <= i)
				printf("%c", ch1);
			else
				printf("%c", ch2);
		}
		printf("\n");
	}
	printf("\n");
}

void star4(char ch1, char ch2, int line) {
	printf("%d. 오른쪽 붙은 역직각삼각형\n", ++cnt);
	printf("\n");
	
	for (i = 0; i < line; i++) {
		for (j = 0; j < line; j++) {
			if (j >= i)
				printf("%c", ch1);
			else
				printf("%c", ch2);
		}
		printf("\n");
	}
	printf("\n");
}

void star5(char ch1, char ch2, int line) {
	printf("%d. 피라미드형\n", ++cnt);
	printf("\n");
	
 for(i=0; i<line; i++)
 {
     for(j=0; j<line-1-i; j++)
         printf("%c", ch1); 
     for(j=0; j<i*2+1; j++)
         printf("%c", ch2);
      printf("\n");
 }
  printf("\n");
}
 
void star7(char ch1, char ch2, int line) {
	int k, l;

	printf("%d. 다이아몬드형\n", ++cnt);
	printf("\n");
	
	for (i = 0; i < line; i++) {
		for (j = 0; j < line; j++) {
			if (i > line / 2)
				k = i - line / 2;
			else
				k = line / 2 - i;
			if (j > line / 2)
				l = line - j - 1;
			else
				l = j;

			if (l >= k)
				printf("%c", ch1);
			else
				printf("%c", ch2);
		}
		printf("\n");
	}
	printf("\n");
}

void star8(char ch1, char ch2, int line) {
	int k, l;

	printf("%d. 모래시계형\n", ++cnt);
	printf("\n");
	
	for (i = 0; i < line; i++) {
		for (j = 0; j < line; j++) {
			if (i > line / 2)
				k = line - i - 1;
			else
				k = i;
			if (j > line / 2)
				l = line - j - 1;
			else
				l = j;

			if (l >= k)
				printf("%c", ch1);
			else
				printf("%c", ch2);
		}
		printf("\n");
	}
	printf("\n");
}


</pre>

<pre id="cp1">
// 주석
// 확장자 *.cpp
// 컴파일 >> g++ hello.cpp  ==> 기본으로 리눅스는  a.out 또는 윈도우는 a.exe 파일이 자동으로 생성
// 리눅스 실행  >> ./a.out
// 윈도우 실행  >> a.exe
// 실행 파일명을 지정하고 싶은 경우
// 컴파일 >> gcc -o hello.out hello.cpp
// 리눅스 실행  >> ./hello.out
// 윈도우 실행  >> hello.exe

#include &lt;iostream>
using namespace std;

int main()
{
    int age = 20;  // 정수형
    string name = "홍길동";  // 문장형
    float wt = 78.5; // 실수형, double은 더 큰 자릿수 표현
    
    cout << "Hello, World!\n";  // \n은 c식 줄 바꿈
    cout << "안녕하세요!"<< endl; // << endl은 c++에서 줄 바꿈

    cout << "당신의 이름은 " << name << "이고 나이는 " << age << "살입니다."<< endl;
    cout << "당신의 몸무게는 " << wt << "kg 입니다."<< endl;

  int a=7;
  int b=3;
  float c=(float)a/b; // 형변환을 해줘야 함, 형변환 하지 않으면 정수가 출력됨
  
 cout << "a / b= " << (float)a/b << endl;
 
 cout.precision(3); // 소수포함 총 3자릿수로 함
 cout << "a / b= " << c << endl;
	
	char message[100] = "\"안녕하세요, 반갑습니다.!\"";  
	// 긴 문장은 배열로 표시할 수 있다.
   //     \"는 겹따옴표 "를 출력하는 명령
  cout << message << endl;
    return 0;
}
</pre>

<pre id="cp2">
#include &lt;iostream>
using namespace std;

int main() {
    int age, kor, eng, math, sum;
    string name, message;
    char message2[100];
    float ave;
 
    cout << "나이(정수 입력) : ";
    cin >> age;

    cout << "당신의 나이는" << age <<"살입니다."<< endl;

    cout << "이름 : ";
    cin >> name;
    cout << "당신의 이름은 " << name <<"입니다."<< endl;

    cin.ignore(numeric_limits<streamsize>::max(), '\n'); // 입력버퍼를 지움 

    cout << "여백있게 문장을 입력하세요 "<< endl;;
    cin.getline(message2, 100); // getline은 공백도 문자로서 받아들임
    cout << message2 << endl;

    cout << "Enter a message (with spaces): ";
    getline(cin, message);  // Read input from cin into message
    cout << message << endl;

    cout  << "과목 점수를 정수로 입력해 주세요" << endl;
    cout  << "국어  : ";
    cin >> kor;
    cout  << "영어  : ";
    cin >> eng;
    cout  << "수학  : ";
    cin >> math;
    
    sum = kor + eng + math; // 자동 형변환
    ave = (float)sum/3;
    cout  << "총점은 " << sum << "이고 평균은 " ;
    cout.precision(4); // 소수포함 총자릿수 4자리로 함
    cout << ave << "점입니다." << endl;
    return 0;
    }
}
</pre>

<pre id="cp3">
#include &lt;iostream> 
#include &lt;vector>
#include &lt;algorithm> // reverse()
#include &lt;numeric>  // iota()
using namespace std;

void star1(int);
void star2(int);

int main() {
int n =7;
star1(n);
star2(n);
}

void star1(int n){
for (int y = 0; y < n; y++) {
  for (int x = 0; x < n; x++){
    if (y <= x) cout << "*"; // c++는 char 변수에 쌍따옴표를 써도 됨.
    else cout << " ";}
  cout << endl;
 }
 }

void star2(int n){
vector<int> l1(n); // n개의 정수형 원소를 갖는 벡터 선언
vector<int> l2(n);

iota(l1.begin(), l1.end(), 0); // 0부터 시작하는 n 개의 list를 만듬(1씩 증가)
iota(l2.begin(), l2.end(), 0);
reverse(l1.begin(), l1.end());  // l1 역순으로 재 배치
for(auto y: l1) {
   for(auto x: l2) {
      if (y <= x) cout << '*';
      else cout << ' ';}
   cout << endl;
}
}
</pre>

<pre id="cs1">
// 한 줄 주석
/*
여러 줄 주석.

1. 윈도우(또는 .net환경)
컴파일은 visual studio 이용.
컴파일 >> csc hello.cs
실행 >> hello.exe

2. 우분투
monodevelop 설치
컴파일 >> mcs -out:hello.o hello.cs
실행 >> mono hello.o

*/

using System;

namespace HelloWorld {
    class HelloWorld {

        static void Main() {
        Console.Write("Hello, "); // no 개행
        Console.WriteLine("World");  // 개행
        Console.WriteLine("안녕하세요!");
        
        int age = 32;
        String name1 = "홍길동";
        var name2 = "김병장";   // 자동 변수형 추론
        Console.WriteLine("당신의 이름은 {0}이고 나이는 {1}살입니다.", name1, age);
        Console.WriteLine("Hello " + name2 + "!");
        
    
    // 변수형을 var로 설정 가능, 자동추론, 단 한 줄로 복수 선언은 불가
        var a = 3; 
        var b = 4.1; 
        var c = 7;
        
        Console.WriteLine("{0} + {1} = {2}", a, b, a+b); // a+b는 실수형.
        Console.WriteLine("{0} / {1} = {2:F2}", a, c, a/b); // a/c는 실수형. 자동형변환
        // F2는 소숫점 이하 두자리까지
        }
    }
}

</pre>

<pre id="cs2">
using System; 

namespace 성적처리 { 
    class Program { 

        static void Main(string[] args) { 
        String name; 
        int kor, eng, math, total; 
        float avg; 
        
        Console.Write("이름 :"); 
        name = Console.ReadLine(); 
        Console.Write("국어 :"); 
        kor = int.Parse(Console.ReadLine()); // string을 숫자로 변환
        Console.Write("영어 :"); 
        eng = int.Parse(Console.ReadLine()); 
        Console.Write("수학 :"); 
        math = int.Parse(Console.ReadLine()); 
        total = kor + eng + math; 
        // 실수는 기본적으로 Double로 받아들여서 Float하고 연산시 경고가 나옵니다.
        avg = (float)total / 3; 
        Console.WriteLine("{0} 님의 총점은 {1} 이고 평균은 {2:f2} 입니다.", name, total, avg); // f2는 소수점 2째자리까지 출력
        } 
    } 
}
</pre>

<pre id="cs3">

using System;

class Program
{
static void Main(string[] args)
{
    int num = 8;
       
        star1(num);
        Console.WriteLine();
        star2(num);
}    

        static void star1(int n){
         int row, col;
         for (row = 1; row <= n; ++row)
           { for (col = 1; col <=  row; ++col) 
           Console.Write("*");
             Console.WriteLine();
           }
      }

     static void star2(int n){
        int y, x;
         for (y = 1; y <= n; ++y) 
           { for (x = 1; x <= n; ++x)
              if (y > n-x)
                  Console.Write("*"); 
              else
                  Console.Write(" "); 
      
               Console.WriteLine(); 
             
           }
      }

}

</pre>

<pre id="j1">
// single line comment
/* multi line comment
컴파일 >> javac out.java
실행 >> java out
java에서는 파일명과 public class명이 같아야 함.
*/
public class out {
    public static void main(String[] args) {
        System.out.println("Hello, world!"); // 자동 줄 바꿈. 빤드시 쌍따옴표("")로 묶어야 함.
        System.out.println("안녕하세요!");
        System.out.print("내 이름은 "); // 줄 바꿈 안함.
        System.out.printf("홍길동입니다.\n"); // \n은 줄 바꿈

        int ht = 178; // 정수형
        double wt = 77.7;  // 실수형
        String name = "홍길동"; // 문자열(string) 변수선언. 앞의 다른 변수형 선언과 달리 String의 S가 대문자임에 주의
        System.out.println("당신의 키는 " + ht +" cm이고, 몸무게는 " + wt + "kg이며, 이름은 " + name + "입니다.");

        int a = 2;
        int b = 3;
        
        System.out.println(a+b);
        System.out.printf("a + b = %d \n", a+b);
        System.out.format("a + b = %d \n", a+b);
        System.out.println(a/b); // 정수형 나누기 정수형은 정수형이므로 결과는 0, 실수가 아니다.
        // 실수가 나오기 위해서는 정수를 실수로 바꿔줌
        System.out.println(a*1.0/b);
        System.out.printf("a/b = %.2f \n", (double)a/b);
        }
}
</pre>

<pre id="j2">
import java.util.Scanner;

public class input {

public static void main(String []args) {

    import java.util.Scanner;

    public class input {
    
    public static void main(String []args) {
    
    String name;
    int age;
    Scanner read = new Scanner(System.in);  // Scanner class에서 name 이라는 객체 생성
    
    System.out.print("이름 : ");
    name = read.nextLine(); // 줄 입력은 nextLine()
    System.out.print("나이 : ");
    age = read.nextInt(); // 입력값은 항상 문자이므로 이를 정수화함
    
    System.out.println("당신의 이름은 "+name+"이고, 당신의 나이는 " +age+ "살입니다.");
    read.close();

    /////////////////////////////////////////////////////////////

    int num;
    double real;
    String str;
        Scanner s1 = new Scanner(System.in);

        System.out.print("정수:");  // 실수를 입력하면 에러남.
        num = s1.nextInt();    // 정수 입력
        System.out.println("당신이 입력한 숫자는 " + num + " 입니다."); // java와 javac의 버전이 다르면 에러남.
        System.out.printf("입력한 숫자는 %d 입니다.\n",num);   // %d 는 정수 
        
        Scanner s2 = new Scanner(System.in);
        System.out.print("실수:");
        real = s2.nextDouble();   // 실수 입력
        System.out.println("당신이 입력한 숫자는 " + real + " 입니다."); 
        System.out.format("입력한 숫자는 %.2f 입니다.\n",real);
        
        Scanner s3 = new Scanner(System.in);
        System.out.print("문자열:");
        str = s3.nextLine(); // 공백있는 문자열 입력. 공백없는 한 단어의 경우는 s1.next(); 로 쓴다.
        System.out.println("당신이 입력한 문자는 " + str + " 입니다."); 
        System.out.printf("입력한 문자는 %s 입니다.\n",str);  // %s 는 문자열 , %c는 단일 문자 
        
        ////////////////////////////////////////////////////////////

        int num1, num2, num3 ;
        double num4 ;
    
        Scanner sc = new Scanner(System.in);
    
        System.out.println("두 정수를 입력하시오");
        System.out.print("num1 : ");
            num1 = sc.nextInt();
            System.out.print("num2 : ");
            num2 = sc.nextInt();
            
        num3 = num1+num2;
        num4 = (double)num1/num2;
        String sum = String.valueOf(num3);
        System.out.println("num1 + num2 = " +sum);
        System.out.printf("num1 + num2 = %d \n", num3);
        System.out.printf("num1 / num2 = %.2f \n", num4);
   }
}

</pre>

<pre id="j3">
import java.util.Scanner;

public class star2 {
 
    public static void main(String[] args) {
 
     System.out.print("정수 입력 : ");
     Scanner input = new Scanner(System.in);
     int n = input.nextInt(); 
     String star = "*";
     String spc = " ";

// 좌측 붙은 삼각형
      for (int y = 0; y < n; y++) {
           for (int x = 0; x < n; x++) {
              if (x<y) 
                 System.out.printf("%s",star);
              else 
                 System.out.printf("%s", spc);
              }
          System.out.println();
        }
      System.out.println();


// 우측 붙은 삼각형
    for (int y = 0; y < n; y++) {
           for (int x = 0; x < n; x++) {
              if (x >= n-y) 
                 System.out.printf("%s",star);
              else 
                 System.out.printf("%s", spc);
              }
          System.out.println();
        }
      System.out.println();
     }
 }

</pre>

<pre id="py1">

# 한 줄 주석
# no multi line comment

print("Hello, World!") # 자동 줄바꿈됨

print('안녕하세요!') # 문자열 출력시 '', "" 둘 다 사용 가능

print("홍", end="") # 자동 줄바꿈 안함
print("길동")

print("Hi, '홍길동'") # 문장에 따옴표 넣을 때는 ' 기호가 있는 경우에는 “ ”로 “ 기호가 있는 경우에는 ‘ ’를 사용
    # 출력 : Hi, '홍길동'

print('안녕', '하세요') # 콤마(,)로 문자열을 나열할 경우 공백이 자동 추가
    # 출력 : 안녕 하세요

print('안녕' + '하세요') # 더하기(+)는 공백없음
    # 출력 : 안녕하세요

 # 긴 문자열은 \ 기호로 사용하여 여러 줄에 작성할 수 있다.
print('I like Python. \
But I do not like Ruby.')
    # 출력 : I like Python. But I do not like Ruby.


# \n 개행, \t 탭키, \\ \, \‘, \“ 등 이스케이프 문자(Escape character)는 \를 사용하여 출력한다.
print('my daughter\'s birthday')
    # 출력 : my daughter's birthday

# 변수 형은 자동 결정
ht = 178 # 정수형
wt = 77.7  # 실수형
name = '홍길동' # 문자열(string)

print('당신의 키는 %dcm이고, 몸무게는 %.2fkg이며, 이름은 %s입니다.' % (ht,wt,name))  

print('당신의 키는 {0}cm이고, 몸무게는 {1:.2f}kg이며, 이름은 {2}입니다.'.format(ht,wt,name)) 

a=7
b=3
c=a/b # 자동 형변환
print(a+b)
print("%.2f" %c)

</pre>

<pre id="py2">

name = input("이름 : ")
print("안녕하세요", name +"님") # , 는 한칸 띄기. 붙여쓸려면 + 사용

age = input("나이 : ") #정수를 입력
print("당신의 나이는" + age + " 살입니다.")

# 실수 2개를 두 줄에 입력
print ("<나누기>")
print ("실수 두 개를 입력하시오")
a = float(input("a: ")) #input값은 문자열로 인식되므로 실수로 형 변환함
b = float(input("b: "))
print ('{0:.2f} ÷ {1:.2f} = {2:.2f}' .format(a, b, a / b))

# 정수 2개를 한줄에 입력. 공백으로 구분
print ("<더하기>")
print ("정수 두 개를 입력하시오")
m, n = map(int, input('정수 2 개를 한 칸 띄어 입력하시오\n').split()) 
# map은 리스트를 모두 형변환할 때 씀. 정수로 형 변환

print('{0} + {1} = {2}'.format(m, n, m+n))

print ("<빼기>")
print ("임의의 수 두 개를 입력하시오")
c, d = map(eval, input('수 2개를 한 칸 띄어 입력하시오\n').split()) 
# eval은 입력형에 따라 자동 형변환

print('{0:.1f} - {1:.1f} = {2:.1f}'.format(c, d, c- d))
</pre>

<pre id="py3">
# 왼쪽 붙은 직각삼각형
def leftRightTriangle(n):
    for i in range(1, n):
	    print ("*" * i)  # *를 i 개 찍어라

# 왼쪽 붙은 직각삼각형
def leftRightTriangle2(n):
# join 함수는 배열의 각 요소간에 특정 문자를 넣을 수 있게함.
# 아래에는 줄바꿈 문자
    print("\n".join("*" * i for i in range(1, 6)))

# 오른쪽 붙은 직각삼각형
def rightRightTriangle(n):
    for y in range (n, 0, -1): # n부터 0까지 1씩 감소
       print(y * ' ' + (n - y) * '*') # 공백을 y개, *를 n - y개 찍어라

# 왼쪽 붙은 역직각삼각형
def revLeftRightTriangle(n):
	print("\n".join("*" * i for i in range(n, 0, -1)))

# 오른쪽 붙은 역직각삼각형
def revRightRightTriangle(n):
	print("\n".join(" " * i + "*" * (n - i) for i in range(1, n)))

n = input("정수 : ") 
n = int(n)
leftRightTriangle(n)
print('')
leftRightTriangle2(n)
print('')
rightRightTriangle(n)
print('')
revLeftRightTriangle(n)
print('')
revRightRightTriangle(n)
print('')
</pre>

<pre id="pl1">
# single line comment
=for comment
multi line comment, '=' 다음에 붙여 쓸 것
=cut

print "Hello world!\n"; # \n은 개행
print "안녕하세요 \n";

# 변수 선언은 my, $는 스칼라 변수, @는 배열 변수
# 변수와 문자열을 같이 써도 됨
my $age = 25;
print "$age \n"; 

my $name = "홍길동";
print "$name \n"; 

# 문자열 결합은 . 연산자로 한다(PHP와 같다)
print ("내 이름은 ".$name. "이고 나이는 ". $age."살입니다. \n");

@num = (3,6,8.1,0,12);
 
my $sum = $num[0] + $num[2]; # 변수형은 자동 조정
my $div = $num[0] / $num[2];
print($num[0]." + ".$num[2]." = "."$sum \n");

# 형식 있는 출력은 'C'의 printf 사용
printf("%d / %.2f = %.2f \n",$num[0],$num[2],$div);

</pre>

<pre id="pl2">

$name = <STDIN>;
$age = <>; # <>안의 stdin은 생략 가능
chomp $name; # chomp는 입력시 return키 제거 함수
chomp $age;

print "당신의 이름은 $name이고 나이는 $age살입니다.\n";

print("정수: ");
$a = <>;
chomp $a;
print("실수: ");
$b = <>;
chomp $b;
print("\n");
$sum = $a+$b;
$div = $a/$b;
print("$a + $b = $sum \n");
printf("%d / %.2f = %.2f \n", $a, $b, $div);

</pre>

<pre id="pl3">

my $num = 7;

# 왼쪽붙은 직각삼각형
sub star1{
my $n=shift @_;  # perl에서는 함수의 인자를 이렇게 선언, @_는 기본 변수
for (my $y = $n; $y >0; $y-- ) {
for (my $x = 0; $x < $n; $x++ ) {
if ($y <= $n - $x)
{ print "*";}
else
{print " ";}
}
print "\n";
}
}

# 왼쪽붙은 직각삼각형
sub star2{
my $n=shift @_;  
for my $y (reverse 0 .. $n) { # 역순으로 시작
for my $x (0 .. $n ) {
if ($y < $n - $x)
{ print "*";}
else
{print " ";}
}
print "\n";
}
}


# 오른쪽붙은 직각삼각형
sub star3{
my $n=shift @_;  
for my $y (reverse 1 .. $n) {
print " " for 0..$y;
print "*" for $y..$n;
print "\n";
}
}

# 오른쪽붙은 직각삼각형
sub star4{
my $n=shift @_;  
print " " x $_, "*" x ($n-$_), "\n" for 0..$n;
}


# 왼쪽붙은 역직각삼각형
sub star5{
my $n=shift @_;
print map { "*" x $_, "\n" } reverse 1 .. $n;  # $_ 는 기본 변수, x 연산자는 스트링 반복
}

# 왼쪽붙은 직각삼각형
sub star6{
  my $n=shift @_;
  print "*" x $_."\n" for 1..$n;   
}

# 피라미드형
sub star7{
my $n=shift @_;  
for my $y (reverse 0 .. $n) { 
for my $x (-$n .. 0 ) {
if ($y <= $n + $x)
{ print "*";}
else
{print " ";}
}
for my $x (1 .. $n) {
if ($y <= $n - $x)
{ print "*";}
else
{print " ";}
}

print "\n";
}
}

star1($num);
print "\n";
star2($num);
print "\n";
star3($num);
print "\n";
star4($num);
print "\n";
star5($num);
print "\n";
star6($num);
print "\n";
star7($num);
</pre>

<pre id="r1">
<xmp>
# single line comment

=begin
multi line comment
실행
> ruby out.rb
=end

puts '안녕하세요'; # 자동 개행
print "내 이름은 홍길동입니다.\n"; #  자동 개행 안됨. \n 포함시 싱글 따옴표 안됨
p "hello!"; # "hello!", 따옴표도 출력, 자동 개행

print <<aaa    
   이 행은 연습입니다.  공백도 그대로 출력됩니다.
       두 줄 이상 출력시 이렇게 하면 됩니다.
aaa
#  <<와 aaa 사이에 여백이 있으면 안됨. aaa은 식별자. 이름은 아무거나 쓰면됨

# c 형 출력
printf "여기에 %d 개의 %s가 있읍니다.\n", 3, '사과'

# 변수선언은 따로 하지 않는다. 변수형 자동 결정
name, age, b, c,  = '홍길동', 25, 3, 2.2, ; 

puts "내 이름은 #{name}이고 나이는 #{age}살입니다."; 
print "내 이름은 ", name, "이고 나이는 ", age, "살 입니다.\n"; 

sum = a + b;
c = age/a; 
# 정수끼리 나누는 것이므로 c도 정수, c = 8

d = age/b; 
# 정수/실수 이므로 d는 실수, d = 11.3636

puts "#{a} + #{b} = #{sum}";
puts "#{age} / #{a} = #{c}";
puts "#{age} / #{b} = #{d}";
printf  "%d / %.2f = %.2f\n", age, b, d; 

</xmp>
</pre>

<pre id="r2">

# gets는 입력값 받는 메서드
# chomp는 입력값에서 앤터값을 제거하는 메서드

puts '이름 :'
name = gets.chomp
puts '나이 :'
age = gets.chomp
print "당신의 이름은 ", name, "이고 나이는 ", age, " 살입니다.\n"

print "당신의 이름은 #{name}이고 나이는 #{age} 살입니다.\n"

puts '정수 :'
a = gets.chomp.to_i   # to_i는 입력받은 문자열을 정수로 변환
puts '정수 :'
b = gets.chomp.to_i

c = (a / b).to_f  # to_f는 입력받은 문자열을 실수로 변환


printf "%d / %d =  %.2f ", a, b, c
</pre>

<pre id="r3">
# 왼쪽 붙은 직각삼각형
# 아래 방식 모두 같은 결과

def leftRightTringle(n)
for i in 1..n
   puts("*" * i) # 개행
end
end

def leftRightTringle2(n)
n.times do
  |i| puts ("*" * (i+1)) # 5는 [0,1,2,3,4]를 의미
end
end

def leftRightTringle3(n)
n.times { |i| puts "*" * (i+1) }
end

def leftRightTringle4(n)
puts ((1..n).map{ |i| "*" * i }.join("\n"))
end

def leftRightTringle5(n)
(1..n).each{ |i| puts "*" * i}
end

n = 5
leftRightTringle(n)
leftRightTringle2(n)
leftRightTringle3(n)
leftRightTringle4(n)
leftRightTringle5(n)
</pre>

<pre id="l1">
-- 주석
--[[
여러 줄 주석
--]]

print("Hello World") --자동 줄바꿈
print("안녕하세요!")
</pre>

<pre id="k1">
// single line comment

/*
compile >> kotlinc hello.kt -include-runtime -d hello.jar
run     >> java -jar hello.jar
*/

fun main(args: Array<String>) {
	print("Hello, ") // no 개행
	println("World!") // 개행
   println("안녕하세요")
   
// 변수선언은 val 혹은 var
// val : 변경 불가능한 값, 상수
// var : 변경 가능한 값, 변수
// 변수든 상수든 무조건 초기화해야 함

  var name = "홍길동" 
   println("내 이름은 $name 입니다.")
   
   // 변수명 한글도 가능

   val 성 = "홍" 
   val 이름 = "길동"
   println("당신의 이름은 ${성+이름}입니다.")
   
   var a : Int = 5 // 변수형은 변수명 뒤에 표시. 자동 추론에 의해 생략 가능
   var b : Double = 3.1
   var c : Float = 3.13f // float type은 값 뒤에 f를 붙여야 함
   println("$a + $b = ${a + b}")// ${ }로 지정한 부분은 그대로 출력되지 않고, 표현식(expression)으로 인식되어 해당 수식을 계산한 후 출력합니다.
   println("$a / $b = ${a / b}")
   println("%d / %.1f = %.2f".format(a, b, (a/b)))

 val d = 3 // 변수형은 자동 결정
 val e = 1.5 
   println("d + e = ${d + e}") 

   val r = 5
   val pi = 3.141592
    println("반지름이 $r 일 때 원주의 길이는 %.2f입니다.".format(2 * pi * r))
}
</pre>

<pre id="k2">
import java.util.Scanner

fun main(args: Array<String>){
  print("이름: ")
  var name  = readLine()!!  
    // !!는 입력값이 null 여부 체크
  print("나이: ")
  var age  = readLine()!! 
  println("내 이름은 ${name}이고 나이는 ${age} 살입니다.")
  
print("정수 입력:") 
var i:Int=readLine()!!.toInt() 
print("실수 입력:") 
var d:Double=readLine()!!.toDouble() 
print(i+d)

  // 두 숫자를 다른 줄에 입력
  println("두 정수를 다른 줄에 입력")
  var var1 = readLine()!!.toInt() // 문자열의 정수화
  var var2 = readLine()!!.toInt()
  println("$var1 + $var2 = ${var1 + var2}")
  
  // 두 숫자를 한 줄에 입력
  println("두 실수를 같은 줄에 입력")
  var (a, b) = readLine()!!.split(' ') 
  println("$a / $b = ${(a.toFloat() / b.toFloat())}")
}

</pre>

<pre id="k3">
fun main(args: Array<String>){
var n = 7
println("왼쪽붙은 삼각형")
star1(n)
println()
println("오른쪽 붙은 삼각형")
star2(n)
}

// 왼쪽붙은 삼각형
fun star1(n : Int){

for (y in 0 until n) { // n을 안 포함, 0..n 은 n을 포함
for (x in 0 until n){
if (y>=x) print("*") // print는 줄바꿈 안함
}
println()
}
}

// 오른쪽 붙은 삼각형
fun star2(n : Int){

for (y in 0 until n) { 
for (x in 0 until n){
if (y>=n-x) print("*")
else print(" ")
}
println()
}
}
</pre>

<pre id="s1">
// single line comment

/*
multiline comment
*/

object output // 자바와 같이 파일명과 객체명이 같아야 함. 
{
  def main(args: Array[String]) {
    print("Hello, world!")  // no 개행
    println("안녕하세요!") // 개행
    
  // Float 실수형, Int 정수형, String 문자열
    var (name, age)= ("홍길동", 30) // 값이 있으면 타입은 자동 판정
    var (kor, eng, math)=(35, 53, 73)
    var ave : Float = ((kor+eng+ math):Float)/3 
// 정수를 실수로 형변환. 안하면 나머지 없는 정수 반환
    
   println("당신의 이름은 " + name + "이고 나이는 " + age + "살입니다.") // java 형식
    println(s"당신의 이름은 ${name}이고 나이는 ${age}살입니다.") // 문자열 앞에 s를 쓰면 $를 쓰고 변수이름을 바로 쓸 수 있음
    println(s"$kor + $eng + $math = ${kor+eng+ math}이고 평균은 ${ave}입니다.")
    
    // c의 printf 형식
     //java.lang.*은 자동으로 import
     printf("%d + %d + %d = %d이고 평균은 %.2f입니다.\n",kor, eng, math, kor+eng+ math, ave)
    println(f"$kor + $eng + $math = ${kor+eng+ math}%d이고 평균은 ${ave}%.2f입니다.") 
  }
}

</pre>

<pre id="s2">
import scala.io.StdIn._
object input 
{
  def main(args: Array[String]) {

val name = readLine("이름: ")
val age = readLine("나이: ")
println(s"당신의 이름은 ${name}이고 나이는 ${age}살입니다.")
 print("정수: ")
 val a = readInt()
 print("정수: ")
 val b = readInt()
 val c : Float = (a:Float) / b
 println(f"${a} / ${b} = ${c}%.2f")
  }
}

</pre>

<pre id="s3">
object star 

  def main(args: Array[String]) {
    var n=7;
    star1(n);
    star2(n);
  }
  
def star1(n:Int)={
     for (y <- 0 until n){   // 0에서 (n-1)까지
       for (x <- 0 to n){  //  0부터 n까지
	       if (y >= x) print("*");
	       else print(" ");
        }
        println();
      }
   }
   
def star2(n:Int)={
     for (y <- n-1 to 0 by -1){  // (n-1)에서 0까지 -1씩 감소
       for (x <- 0 to n){
	       if (y < x) print("*");
	       else print(" ");
        }
        println();
      }
   }   
   
}

</pre>


<pre id="h1">
<xmp>

<html>
<!-- html 주석문 -->
<!-- out.html을 웹브라우저의 주소창에 입력-->

<head>
    <meta charset="utf8"> <!-- 한글 표기 -->
    <title>  html output  </title>
    
    <style> 
    /* 스타일 문의 주석 */
    
     /* class = cls1인 태그 */
        .cls1{  
                  border: 1px solid; 
                  padding: 30px; 
                  margin-left: 20px;
                } 
                
            /* id = id2 인 태그 */
        #id2{  
            border: 1px solid gray; 
            padding:10px; 
            margin-left: 20px; 
            background-color: thistle; 
            color:mediumvioletred;
            width: 400px;
            height: 200px
            }
            
            /* id = id1 인 태그 */
        #id1{  
                text-align: center;
                color:green;
                 }
                 
           /* p 태그 */
        p{ 
            line-height: 32px;
            }
            
         #id3{
              font-style: italic;
              font-weight: bold;
              font-size: 24px;
              color: black;
              font-family: arial, "Times New Roman";
             }
    </style>
    
        <style>
  /* table 서식 스타일문 */
      table{
        border-collapse: collapse;
        table-layout: fixed;
        border : 1px solid black;
        width : 400px;
        margin:auto; /*테이블 가운데 중앙정렬*/
        font-size:22px
      }
      tr, td, th{
        text-align: center;
        height:50px;
      }
      /* 표에 대각선을 긋는 코드, 여기서는 th 태그의 id = diag 셀에 대각선을 긋는다. */
      table:nth-of-type(1) th#diag { /* 첫번째 표에 대각선을 긋는다. */
        background-image: linear-gradient(
          to top right,
          white 49%,black,white 51%
        );
      }

      caption {
          text-align: center;
          margin-bottom: 5px;
          text-transform: lowercase;
          font-size: 100%;
          padding: 10px;
          /*letter-spacing: 10px;*/
          font-weight: bold;
          color:#ff9999;
      }
     </style>
     
    <!-- 외부 스타일 파일 test.css 적용. -->
    <link rel="stylesheet" type="text/css" href="test.css"> 
</head>
    
<body>
    <div class = cls1> <!-- div tag는 단락을 구분짓는 태그, 여러개의 div가 있을 경으 id, class로 구분 -->
    	
    	<!-- h tag는 글자 크기 큰 것 부터 -->
        <h1 id=id1> 1. 제목1 </h1> 
        <h2 > 제목2 </h2>
        <h3 > 제목3 </h3>
    </div>
    
        <div id = id2> 
       <h2 > 2. 문장 </h2>
        <p id = id3>Hello, world! </p>
        <p >안녕하세요! <br> <!-- 줄바꿈 -->
        	반갑습니다.</p>
        </div>
      
    <div>
           <!-- 이미지 삽입 -->
           	<h2 > 3. 이미지 삽입 </h2>
    <p>    <img src="test.png" width = "200" height = "200" alt="My Image"></p>
        </div>
        
     <div>
       <!-- 하이퍼 텍스트 링크 삽입 -->
        <h2 > 4. 하이퍼 텍스트  </h2>	
     <p>   <a href = "http://www.naver.com"> 네이버 <a> <!-- 외부 주소 링크 --></p>
    </div>
    
        <div>
        	<!-- 테이블 만들기 -->
        	<h2> 5. 죄인들의 딜렘마(prisonner's dilemma)</h2>
<br>
<table border="1">
  <caption>표 1. 죄인들의 딜렘마</caption>
  <tr >
    <th id = "diag"> <pre>갑      을</pre> </th>
    <th > C </th>
    <th > D </th>
  </tr>
  <tr >
    <th > C </th>
    <td > -1,-1 </td>
    <td > -9, 0 </td>
  </tr>
  <tr >
    <th > D </th>
    <td >  0, -9 </td>
    <td > -5, -5 </td>
  </tr>

</table>
        </div>
</body>
</html>

</xmp>
</pre>

<pre id="h2">
<xmp>

<html>
	<head>
    <meta charset="utf8"> 
    	</head>
    
<body>

<h2>login field</h2>

<!--
입력 방식으로 form tag를 쓴다.
action 속성은 입력자료를 서버에서 처리하는 파일. 서버용 언어에 따라 php, python, node.js, JSP등 사용
method는 post, get 2 종류
post 방식: 보안상 바람직, get 방식:url에 입력내용 노출, 보안상 비바람직

입력 자료를 화면에 출력하기 위해서는 javascript가 필요.
-->
<form action="/myscript" method="post">   

<!--박스형 입력-->
User name:<br>
<input type="text" name="userid" value="yourID">  <!-- value=" "는 기본 입력값-->
<br><br>
User password:<br>
<input type="password" name="psw" value="yourPW"><br>
<p>The characters in a password field are masked (shown as asterisks or circles).</p><br>

숫자 입력:<br>
<input type="number" name="points" step="any"> <br>
<!-- 정수 입력은  type="number", 소숫점 포함 실수를 입력하려면 step="any" 추가-->
<br>
<input type="submit" value="Submit"><br>
<br><br>
	
성별:<br>
<!--라디오 단추형 입력-->
  <input type="radio" name="gender" value="male" checked> Male<br>  <!-- checked는 기본값-->
  <input type="radio" name="gender" value="female"> Female<br>
  <input type="radio" name="gender" value="other"> Other
<br><br>

출신지:<br>
<!--drop down 형 입력-->
<select name="do">
  <option value="경기">경기도</option>
  <option value="충청">충청도</option>
  <option value="강원">강원도</option>
  <option value="전라">전라도</option>
</select>
<br><br>

<!--문장형 입력-->
기타:<br>
<textarea name="message" rows="10" cols="30">
기본 입력문.
</textarea>
<br><br>
	
<button>submit</button>

</form>

</body>
</html>
</xmp>
</pre>

<pre id="h3">
자바스크립트를 이용해서 별찍기를 할 수 있다.
별찍기 알고리듬 참조
</pre>

<pre id="ph1">
<xmp>
<html>
 <head>
  <title>PHP 테스트</title>
  	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
 </head>
 <body>
 
 <?php 
// This is a single-line comment

# This is also a single-line comment

/*
multiple-lines comment 
웹서버 구축 후 php 파일을 지정 폴더에 넣고
웹브라우저에서 서버 ip 주소로 접속하여 실행한다.
예) 테스트용으로 http://localhost/test.php 
*/

$name = "홍길동"; 
echo '<p>Hello World</p>'; 
echo $name."님 안녕하세요<br>"; // string 연결은 .로 한다.
echo "내 이름은 $name 입니다.<br>"; // 이렇게 표현해도 된다. $name 과 입니다. 사이를 띄어야 함. 
echo "내 이름은 ${name}입니다.<br>"; 
?> 

<?php
$x = 5.3;
$y = 3;
$z = $x + $y;
$a = $x/$y;
echo "x = $x <br>"; // 자동 타입 추정
echo "y = $y <br>";
echo "$x + $y = ".$z."<br>";
echo "$x / $y = $a <br>";
printf( "%.1f / %d = %.2f \n", $x, $y, $a);
?>

</xmp>
</pre>

<pre id="ph2">
<xmp>
<head>
   <meta charset="UTF-8">
   <title>PHP Form Validation</title>
</head>

<!-- post 방식은 정보 노출 안됨 -->
<form action = "input_output.php" method="post">
Name: <input type="text" name="name"><br>
E-mail: <input type="text" name="email"><br>
post 방식: <input type="submit">
</form>

<!-- get 방식은 url에 정보 노출  -->
<form action = "input_output.php" method="get">
Name: <input type="text" name="name"><br>
E-mail: <input type="text" name="email"><br>
get 방식: <input type="submit">
</form>

<form action = "input_output.php" method="get">
<!-- step = "any" 는 실수 입력 가능, 이게 없으면 정수만 입력 가능-->

정수: <input type="number" name="var1"><br>
정수: <input type="number" name="var2"><br>
실수: <input type="number" step="any" name="var3"><br>
<input type="submit" value="계산">
</form>
 
 <?php
// local host에서 돌리면 안됨. 외부 php서버에서 돌려야 함

if (isset( $_POST["name"]) || isset($_POST["email"])) { // isset() 함수는 변수의 존재 여부 확인
echo "당신의 이름은 ".$_POST["name"]."입니다.<br>";
echo "Your email address : ".$_POST["email"]; 
exit();
}
   
if (isset( $_GET["name"]) || isset($_GET["email"] )) {
echo "당신의 이름은 ".$_GET["name"]."입니다.<br>";
echo "Your email address : ".$_GET["email"]; 
exit();
}
   
if (isset( $_GET["var1"]) || isset($_GET["var2"]) || isset($_GET["var3"] )) {
echo "<h2> 출력</h2>";
echo "<textarea rows=\"4\" cols=\"50\">";  // "출력위해 이스케이프 \" 사용
$var1 = $_GET["var1"];
$var2 = $_GET["var2"];
$var3 = $_GET["var3"];
$frac = $var1/$var2;   // 변수의 타입 추론 
echo "${var1} + ${var3} = ",$var1+$var3,"\n";  // textarea 내에서는 개행 명령이 \n
echo "${var1} / ${var2} = ${frac}\n";

printf("%d / %d = %.2f\n", $var1, $var2, $var1/$var2); // 소숫점 이하 두째자리까지
echo "</textarea>";
exit();
}
?>
</xmp>
</pre>

<pre id="ph3">
<xmp>
<?php
$n = 10; 
echo "왼쪽 붙은 삼각형<br>";
star1($n);
echo "<br>";
echo "오른 쪽붙은 삼각형<br>";
star2($n);

// 왼쪽붙은 삼각형
function star1($n){
for ($y=0; $y < $n ; $y++) {
  for($x = 0; $x < $n; $x++ ) {
    if ($x < $y) echo "*";
    else echo "&nbsp";
  }
  echo "<br>";
}
}

// 오른쪽 붙은 삼각형
function star2($n){
for ($y = $n-1; $y >= 0 ; $y--) {
  for($x = 0; $x < $n; $x++ ) {
    if ($x > $y) echo "*";
    else echo "&nbsp";
  }
  echo "<br>";
}
}
?>
</xmp>
</pre>

<pre id="js1">
<xmp>
<html>
<!--
html 파일내 임의의 자리에 올 수 있으나 <body> 맨 밑줄을 권장함.
파일을 따로 만드는 경우는 <script> 태그 없이 만든 후 *.js 파일로 저장.
<head>태그 사이, 또는 <body> 맨 밑줄에 <script src="./your folder/mytest.js"></script>
-->

<head>
    <meta charset=utf8> 
    	<script src="./out2.js"></script>
</head>

<body>
    <div id = test> </div>
    <p id = test2> </p>
    <p id = test6> </p>
    <p id = test3> </p>
    <p id = test4> </p>
    <p id = test5> </p>
 
</body>

<script>
// 한 줄 주석
/*
여러줄 주석
*/

alert("Hello, world! \n 안녕하세요!"); // alert box로 출력

// 모든 변수는 변수형에 무관하게 var로 선언
var ht = 178; 
var wt = 77.7;
var name = "홍길동";
var age = 33;

const 이름 = "김철수";  // const는 변하지 않는 상수
const 나이 = 42;

// html tag내 출력
document.getElementById("test").innerHTML = "<h2>javascript 연습</h2>"; // id = test 를 갖는 태그안에 출력 
document.getElementById("test2").innerHTML = "당신의 이름은 "+name+"이고 나이는 "+age+"살입니다.<br>";
document.getElementById("test6").innerHTML = `당신의 이름은 ${이름}이고 나이는 ${나이}살입니다.<br>`;

var a = 3;
var b = 4.1;
var c = 7;
document.getElementById("test3").innerHTML = a+" + "+b+" = "+(a+b)+"<br>";  // 자동 타입 추론
document.getElementById("test4").innerHTML = a+" / "+c+" = "+(a/c)+"<br>";  
document.getElementById("test5").innerHTML = a+" / "+c+" = "+(a/c).toFixed(2)+"<br>";  // 소숫점 이하 2자리까지

</script>

<script>
document.write("Hello, javascript!<br>"); 
// document.write()는 기존의 웹페이지 내용을 다 지우고 그 위에 덮어 쓰는 것이므로 코딩 연습의 경우 외에는 쓰면 안됨.
</script>

<script>
// 브라우저내 콘솔창에 출력. 웹브라우저에서 F12키로 콘솔창 실행
// 모든 변수는 변수형에 무관하게 var로 선언
var ht = 178; 
var wt = 77.7;
var name = "홍길동";
var age = 33;

console.log("당신의 키는 " +ht+"cm이고, 몸무게는 "+wt+"kg이며, 이름은 "+name+"입니다.");

const 이름 = "김철수";  // const는 변하지 않는 상수
const 나이 = 42;

// 테플릿 리터럴을 사용하기 위해 괄호안은 따옴표가 아닌 백틱 ` 사용
console.log(`당신의 이름은 ${이름}이고 나이는 ${나이}살입니다.`);
</script>

</html>
</xmp>
</pre>

<pre id="js2">
<xmp>
<head>
   <meta charset="UTF-8">
   <title> javascript 입력 </title>
   
    <script>
    	// 문장에 직접 입력
        function showMessage(){
            var message = document.getElementById("message").value;
            display_message.innerHTML= message;
        }
    </script>
    
    <script> 
function input(){ 
  var result = document.getElementById('text'); 
  result.value =  prompt('문자열을 입력하세요: '); 
} 
document.getElementById('btn').onclick = input; 
</script> 

<script> 
function calc(){ 
  var num1 = document.getElementById('num1'); 
  var num2 = document.getElementById('num2'); 
  var oper= document.getElementById('oper'); 
  var result = document.getElementById('result'); 
  result.value = eval(num1.value + oper.value + num2.value); 
} 
document.getElementById('equals').onclick = calc; 
</script> 
</head>

<body>
<form>
Enter message: <input type="text" id = "message">
<input type="button" onclick="showMessage()" value="submit" />
</form>
<p> Your message is: <span id = "display_message"></span> </p>

<input type="button" id="btn" value="입력"> <br><br>
<input type="text" id="text"> <br><br><br>

<input type="number" id="num1"> 
<select id="oper"> 
<option value="+">+</option> 
<option value="-">-</option> 
<option value="*">*</option> 
<option value="/">/</option> 
</select> 
<input type="number" id="num2"> 
<input type="button" id="equals" value="="> 
<input type="number" id="result"> 

</body>

</xmp>
</pre>

<pre id="js3">
<xmp>
 <a href = "https://kkmin1.github.io/kkmin/star.html" target="_blank"> 별찍기 알고리듬 </a>
 참조
</xmp>
</pre>

<pre id="jq1">
&lt;!--
html 파일내 임의의 자리에 올 수 있으나 &lt;body> 맨 밑줄을 권장함.
javascript 파일을 html 파일과 분리하여 따로 만드는 경우는 &lt;script> 태그없이 만든 후 확장자 .js 파일로 저장.
html 파일과 같은 폴더에 넣고 위와 같이 &lt;head>태그 사이, 또는 &lt;body> 맨 밑줄에 &lt;script src="code.js">&lt;/script>
다른 폴더에 넣었을 때는 경로를 표시해야 함. 예) project 폴더의 code.js파일인 경우 &lt;script src="./project/code.js">&lt;/script>
-->

&lt;html>
&lt;head>
&lt;title>jQuery Hello World&lt;/title>

&lt;script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js">&lt;/script>
&lt;!--외부의 jQuery 파일을 불러 온다. 받는 장소는 google외에 ms 등도 있다.  자세한 것은 <a href = "https://jQuery.com"> jQuery 홈페이지 </a> 참조.
다운로드 받아서 사용할 수도 있다.
-->
&lt;/head>

&lt;body>

&lt;script>

$(document).ready(function(){
/* <body>태그가 로드된 후 자바스크립트를 실행하라는 명령. 내용 로드 전 자바스크립트가 실행된다면 오류 날 수 있기 때문이다.
'$(document).ready(function(){' 는 '$(function(){' 로 줄여 써도 된다.
*/
    $("#abc").html("Hello World");  // 태그 중 id="abc"인 태그에 html("")내용 출력.
});

&lt;/script>

&lt;div id="abc">
&lt;/div>

&lt;/body>
&lt;/html>
</pre>


<pre id="jl1">
# single line comment

#=
multi-line comment

1. 실행
>> julia hello.jl

2. 또는 julia 실행 후 julia 화면에서 include("hello.jl")
>> julia
julia> include("hello.jl")
=#

println("Hello World")  # 개행
print("안녕하세요!")  # 개행 없음

println("") 
print("hi \n")  # 개행

성="홍"
이름="길동"

println("나의 이름은 ",성,이름, "입니다.")
# println('홍'+'길동')
# python과 달리 + 는 에러

ht = 178 # 정수형
wt = 77.7  # 실수형

println("키는 ", ht,"cm,", " 몸무게는 ", wt, "kg")

name = "철수"
age = 33
println("내 이름은 $(name)이고 나이는 $(age)살입니다.")

a = 3
b = 4.1
c = 7
println(a, " + " , b, " = " , (a+b))   # 타입 자동추론
println("$(a) / $(b) = $(a/c)")


# 배열
성 = ["김", "이", "박", "조"]
println(성[1])   # 김,주의 :  index는 1부터 시작, 

#=

c 언어와 같이 % 기호를 활용하여 변수값을 출력할 수 있다. (%d 정수, %f 실수, %s 문자열)

%5.2f처럼 출력하는 모양을 지정할 수 있다. (총 자릿수 5, 소수점 2자리까지)

format 함수를 사용하면 좀 더 다양한 방식으로 출력을 할 수 있다.

=#

using Printf     # P는 대문자 주의!
@printf("%d / %d = %.2f \n", a, c, (a/c))  # c언어형 출력. 소숫점 이하 두자리까지

@printf("당신의 키는 %dcm이고, 몸무게는 %.2fkg이며, 이름은 %s입니다.\n", ht,wt,name)  # .2f는 wt는 소숫점 2자리까지만 출력

    # 출력 : 당신의 키는 178cm이고, 몸무게는 77.70kg이며, 이름은 홍길동입니다.

</pre>

<pre id="jl2">
print("이름 : ")
name = readline()
print("나이 : ")
age = readline()
println("당신의 이름은 $(name)이고 나이는 $(age)살입니다.")

print("정수 입력 : ")
var1 = readline()
print("실수입력 : ")
var2 = readline()

# 입력값은 string이므로 계산을 하기 위해서는 숫자화해야 함
var1 = parse(Int, var1)
var2 = parse(Float32, var2)
var3 = var1 + var2
var4 = var1 / var2

println("$(var1) + $(var2) = $(var3)")
println("$(var1) / $(var2) = $(var4)")

</pre>

<pre id="g1">

// single line comment
/* multiline comment
// 컴파일 >> go build -o hello.out hello.go
// run >> ./hello.out
*/
  
package main

import "fmt"

func main() {
    fmt.Println("hello, world")
    fmt.Printf("안녕하세요\n")
    const (
    age = "25" // 문자열
    name = "홍길동"
    )
    fmt.Println("내 이름은",name, "이고 나이는",age, "살 입니다.")
    fmt.Println("내 이름은 " + name + "이고 나이는 " + age + "살 입니다.")
  
    num1 := 7 // 자동 변수형 결정
    var num2 float32 = 3.2 // 실수형 변수
    num3 := float32(num1) + num2 // 연산을 위해서는 변수형이 같아야 함
    num4 := float32(num1) / num2 
    fmt.Printf("%d + %.1f = %.2f \n", num1, num2, num3)
    fmt.Printf("%d / %.1f = %.2f \n", num1, num2, num4)
}
 
</pre>

<pre id="g2">
package main
import ("fmt")
 
func main() { 

var age, name  string
var a, b, c int 
var d float32
fmt.Print("나이 :") 
fmt.Scan(&age) 

fmt.Print("이름 :") 
fmt.Scan(&name)
fmt.Println("당신의 이름은 " + name + "이고 나이는 " + age + "살입니다.")

fmt.Print("정수 :") 
fmt.Scan(&a) 
fmt.Print("정수 :") 
fmt.Scan(&b) 

c = a + b 
d = float32(a) / float32(b)
fmt.Printf("%d + %d = %d \n", a, b, c)
fmt.Printf("%d / %d = %.2f \n", a, b, d)
} 


</pre>

<pre id="g3">
package main

import (
    "fmt"
    "strings"
    "strconv"  // strconv용
)

func main() {
	n := 6
	star1(n)
	star2(n)
	star3(n)
	star4(n)
	star5(n)
	star6(n)
	}

func star1(n int){
for y:= 0; y <= n; y++ {
	for x:=0; x<=n; x++{
		if y>x {
fmt.Printf("*")
} else{

fmt.Printf(" ")
}
}
fmt.Printf("\n")
}
}

func star2(n int){
list := make([]int, n+1) // 0에서 n까지 정수 숫자 배열을 만듬
for y := range list {
	for x:= range list{
if y>x {
fmt.Printf("*")
} else{

fmt.Printf(" ")
}
}
fmt.Printf("\n")
}
}

func star3(n int){
for y := range [7] int{} { // 7개의 정수 리스트, 변수 n을 쓸 수 없음
	for x:= range [7] int{} {
if y>x {
fmt.Printf("*")
} else{
fmt.Printf(" ")
}
}
fmt.Printf("\n")
}
}

func star4(n int){
for i := 1; i <= n; i++ {
fmt.Printf("%s\n", strings.Repeat("*", i)) //  *는 i회 반복
}
}

func star5(n int){
for i := 1; i <= n; i++ {
fmt.Printf("%6s\n", strings.Repeat("*", i)) // 6개의 string 자릿수, *는 i회 반복
}
}

func star6(n int){
fmtString := "%" + strconv.Itoa(n) + "s\n"  // n개의 string 자릿수, Itoa => interger to string
for i := 1; i <= n; i++ {
fmt.Printf(fmtString, strings.Repeat("*", i))
}
}
</pre>

<pre id="ex1">

# single line comment, no multiline comment
# 실행 >> elixirc hello.ex # 컴파일 및 실행
# 실행 >> elixir hello.exs # 스크립트 파일

IO.puts "Hello, Elixir" # 개행
IO.puts("안녕하세요")
name = "홍길동"
age = 25
IO.puts("내 이름은 #{name}이고 나이는 #{age}살입니다.")
IO.puts("내 이름은 " <> name <> "이고 나이는 " <> to_string(age) <> "살입니다.")
a = 2
b = 3
c = a/b # 자동 변수형 결정
c = Float.round(c,2) # 소숫점 2 자리까지
IO.puts("#{a} + #{b} = #{a+b}")
IO.puts("#{a} / #{b} = #{c}")
</pre>

<pre id="ex2">
name=IO.gets("이름 : ")
name=String.trim(name) # 개행문자 제거
age=IO.gets("나이 : ")
age=String.trim(age) 
IO.puts("당신의 이름은 #{name}이고 나이는 #{age}살입니다.")

a=IO.gets("정수 입력 : ")
a=String.trim(a) 
a=String.to_integer(a)
b=IO.gets("정수 입력 : ")
b=String.trim(b) 
b=String.to_integer(b)
IO.puts("#{a} / #{b} = #{a/b}")
c = a/b # 자동 변수형 결정
c = Float.round(c,2) # 소숫점 2 자리까지
IO.puts("#{a} + #{b} = #{a+b}")
IO.puts("#{a} / #{b} = #{c}")
</pre>

<pre id="ex3">
</pre>

<pre id="cl1">

; 한줄 주석
(comment
여러줄 주석
)


(ns examples.hello (:gen-class))
(defn hello [] (println "안녕하세요")) ;hello 는 함수명.
(hello) ; hello 함수를 호출

(defn yourName [name age]
   (println (format "당신의 이름은 %s이고 나이는 %d살입니다." name age)))

(yourName "홍길동" 25)

(defn Example []
   (def x 1)
   (def y 3)
  
   (println (+ x y)) ; 더하기
   (println (/ x y)) ; 나누기, 1/3
   (println (float(/ x y))) ; 0.3333
   
   (def z (float(/ x y)))
   (println (format "%d / %d = %.2f" x y z)) ; 
 )
(Example)

</pre>

<pre id="cl2">

</pre>

<pre id="cl3">

</pre>

<pre id="rs1">
// single line comment

/* multiline comment
컴파일  >> rustc hello.rs
실행 (리눅스)     >> ./hello
실행 (윈도우)     >> .\hello.exe
*/

fn main() {
    print!("Hello, Rust!");  // no 개행, !는 매크로를 의미
    println!("안녕하세요!"); // 개행

let str1 = "홍길동"; // 문자열
let x : i32 = 25; //immutable, (default), i32는 32비트 정수형
let y = 68.50f32; // f32는 실수형, type 선언시 값뒤에 적어도 됨, 단 붙여 써야함.
println!("내 이름은 {}이고 나이는 {}살이고 몸무게는 {:.2}kg입니다.", str1, x, y);

println!("{0} / {1:.2} = {2:.2}", x, y, x as f32/y); // {0}{1}{2}는 각자 첫번째, 두번째, 세번째 인자
// x as f32는 정수형 x를 실수형으로 형변환

}

</pre>

<pre id="rs2">
use std::io;
    
fn main() {
    println!("이름");
    let mut name = String::new();
    io::stdin().read_line(&mut name).expect("Failed to read line"); // expect()는 예외 처리
    if let Some('\n')=name.chars().next_back() {
        name.pop();} // 개행문자 제거
    println!("나이");
    let mut age = String::new();
    io::stdin().read_line(&mut age).expect("Failed to read line");
    if let Some('\n')=age.chars().next_back() {
        age.pop();}
    println!("당신의 이름은 {}이고 나이는 {}살 입니다.", name, age);
 
 // 숫자 입력시 줄바꿈  
    println!("정수 : "); 
    let mut x = String::new();
    io::stdin().read_line(&mut x).expect("failed to read input.");
    let x: i32 = x.trim().parse().expect("invalid input");  // trim은 개행문자 제거, parse는 문자의 숫자화
    println!("정수 : "); 
    let mut y = String::new();
    io::stdin().read_line(&mut y).expect("failed to read input.");
    let y: i32 = y.trim().parse().expect("invalid input");  
    println!("{} + {} =  {}", x, y, x + y);
    println!("{0} / {1} =  {2:.2}", x, y, (x as f32 / y as f32));
    }

</pre>

<pre id="rs3">
fn main(){
let n = 7i32;
star1(n);
println!("");
star2(n);
}

fn star1(n : i32){
for y in 0..n {
for x in 0..n {
	if x <= y {print! ("*");}
	else {print! (" ");}
}
println!("");
}
}

fn star2(n : i32){
for y in (0..n).rev() {  // rev()는 역순으로 배열
for x in 0..n {
	if x >= y {print! ("*");}
	else {print! (" ");}
}
println!("");
}
}

</pre>

<pre id="hs1">
-- 한줄 주석
{--
여러줄 주석
 haskell은 함수지향형 언어로서. 변수명, 객체 등 모든 것을 함수로 봄
실행: > runhaskell hello.hs
--}

import Text.Printf  -- printf 함수에 사용 

num = 8  -- 정수형, 자동추론
num1 = 8  -- 타입을 명시하지 않으면 아래 더하기 계산이 있으므로 타입을 일치하기 위해 실수형으로 추론
num2 = 4.5 -- 실수형
c1 = 'a' -- char 형
a = "hello" -- [char],  문자 list 형
b = "haskell"

{-- 
main 함수는 c의 main 함수,   java의 main 클래스에 대응하는 haskell의 기본 입출력 함수
main = { }, 명령이 여러개일 때는 do 사용하여 ;로 구분, 
중괄호는 생략 가능하며 줄바꿈으로 ; 대체. 대신 줄은 맞춰야 함
--}

main = do
        putStr "Hello"     -- no 개행
        putStrLn "World"      -- 개행, HelloWorld. 따옴표가 안찍힘.
        print "Hello World"   -- "Hello World". 따옴표가 찍힘.

        print (num*4)    -- 32, 괄호가 있어야 함, 개행
        print(num /= 8) -- False, /=은 다르다 기호. 다른 언어와 다름
        print (num1*4)    -- 32.0
        print $ num1*4     -- 32.0, $를 쓰면 괄호안해도 됨
        putStrLn (a++" "++b)      -- hello haskell, 두 문자열의 합은 ++
        print (num1 + num2)    -- 12.5
        putStrLn(show(num1 + num2))   -- 12.5, putStrLn는 문자를 출력, show 함수는 숫자를 문자화
        print $ show(num1)++" + "++show(num2)++" = " ++show(num1+num2) -- 출력시 타입을 일치시켜야 함. 따라서 숫자를 문자화
        putStrLn $ show $ num1 + num2    -- 12.5
        (putStrLn.show)(num1) -- .은 두 함수를 연결하는 역할


        let var1 = 11 -- main 함수내 변수 설정은 let을 써야함
        let var2 = 3 
        printf "%d \n" (var1::Int)
        printf "%d + %d = %d \n" var1 var2 (var1+var2)
        let a = fromIntegral var1 :: Float  -- 정수를 실수로 변환
        let b = fromIntegral var2 :: Float
        printf "%f / %f = %.2f \n" a b (a / b)

</pre>

<pre id="hs2">
main = do

  putStrLn "이름 : "

  name <- getLine
  putStrLn "나이 : "

  age <- getLine

  putStrLn ("내 이름은 " ++ name ++ "이고 나이는 " ++ age ++ "살입니다.")

  
  putStrLn "enter value for x: "
  input1 <- getLine
  putStrLn "enter value for y: " 
  input2 <- getLine 
  let x = (read input1 :: Int)
  let y = (read input2 :: Int)
  print (show(x)++ " + " ++show(y)++ " = " ++show(x + y))
  let x1 = fromIntegral x :: Float 
  let y1 = fromIntegral y :: Float 
  print(show(x1)++ " / " ++show(y1)++ " = " ++show(x1 / y1))
</pre>

<pre id="hs3">
-- 한줄 별출력 함수
starRow 0 = return ()
starRow n =
  do
    putStr "*"
    starRow (n-1)


-- 한줄 공백 출력 함수
spaceRow 0 = return ()
spaceRow n =
  do
    putStr " "
    spaceRow (n-1)


-- 왼쪽 붙은 삼각형
star1 0 = return ()
star1 n =
  do
    star1 (n-1)
    starRow (n)
    putStrLn ""


-- 오른쪽 붙은 삼각형
star2 (0, sp) = return ()
star2 (st, sp) =
  do 
    star2 (st-1, sp+1)
    putStrLn ""
    spaceRow (sp)
    starRow (st)


-- 피라미드형
star3 (0, sp) = return ()
star3 (st, sp) =
  do 
    star3 (st-1, sp+1)
    putStrLn ""
    spaceRow (sp)
    starRow (2*st-1)


-- 왼쪽 붙은 삼각형
star4 =  concat[starLow1(y) ++ "\n"| y <- [1..n]]
starLow1(y) =  concat["*" ++ ""| x <- [1..n], y > x]

-- 왼쪽 붙은 역삼각형
star5 =  concat[concat ["*" ++ ""| x <- [1..n], y < x] ++ "\n"| y <- [1..n]]

-- 오른쪽 붙은 역삼각형
star6 =  concat[concat [" " ++ ""| x <- [1..n], y > x] ++ concat ["*" ++ ""| x <- [1..n], y < x]++"\n"| y <- [1..n]]

-- 오른쪽 붙은 삼각형
star7 =  concat[concat [" " ++ ""| x <- [1..n], y < x] ++ concat ["*" ++ ""| x <- [1..n], y > x]++"\n"| y <- [1..n]]

n = 7

main = 
  do
    star1 n
    putStrLn ""
    star2 (n,0)
    putStrLn ""
    star3 (n,0)
    putStrLn "" 
    putStr star4
    putStrLn ""
    putStr star5
    putStrLn ""
    putStr star6
    putStrLn ""
    putStr star7


</pre>

<pre id="ns1">
// node.js 설치
// console에서 실행
// >> node hello.js
// >> Server running at http://127.0.0.1:1337/
// 웹브라우저에서 localhost:1337 입력
// 웹브라우저에 "안녕하세요! node.js 강의에 오신 것을 환영합니다." 출력

const http = require('http'); // 상수변수 http 설정
const hostname = '127.0.0.1'; // 상수변수 hostname 설정
const port = 1337; // 상수변수 port 설정

const server = http.createServer((req, res) => {
  res.writeHead(200, { 'Content-Type': 'text/plain; charset=UTF-8' }); // charset=UTF-8은 한글 출력이 깨짐 방지
  res.end('안녕하세요! node.js 강의에 오신 것을 환영합니다.\n');
});
server.listen(port, hostname, () => {
  console.log(`Server running at http://${hostname}:${port}/`); // 괄호안은 작은 떠옴표('')가 아니라 ~표시 밑에 있는 (``)임에 주의.
});
</pre>

<pre id="ns2">

</pre>

<pre id="ns3">

</pre>

<pre id="mt1">
% single line comment
%{
multiline comment
실행
>> *.m 
%}
% octave는 한글 안됨

disp("hello world") % 개행
disp("안녕")
name = '홍길동';   % semicolon is needed for no display
age = 25;

X = ['내 이름은 ' ,name,'이고 나이는 ',num2str(age),' 살입니다.']; 
disp(X)  % num2str()는 숫자의 문자화

fprintf('내 이름은 %s이고 나이는 %d 살입니다. \n',name,age);

a = [3 7 1.2];
Z = [num2str(a(1)), ' + ', num2str(a(3)), ' = ', num2str((a(1)+a(3)))];
disp(Z)
% matlab에서 첫번째 원소는 a(1)

Y = [num2str(a(1)), ' / ', num2str(a(2)), ' = ', num2str((a(1)/a(2)))];
disp(Y)

fprintf('%d / %d = %.2f \n',a(1),a(2), a(1)/a(2));

</pre>

<pre id="mt2">
name = input('이름: ', 's');   % string input
age = input('나이: ');    % number input
X = ['내 이름은 ' name,'이고 나이는 ',num2str(age),' 입니다.'];
disp(X)

disp('숫자 입력(real or integer)') % no type check, any type is possible.
a = input('숫자: ');
b = input('숫자: ');
c = a+b;
d = a/b;
out1 = [num2str(a), ' + ', num2str(b), ' = ', num2str(c)];
out2 = [num2str(a), ' / ', num2str(b), ' = ', num2str(d)];
disp(out1)
disp(out2)


</pre>

<pre id="mt3">
% print star image

star1(7);
disp(" ");
star2(7);
disp(" ");
star3(7);
disp(" ");
star4(7);
disp(" ");
star5(7);

% 왼쪽 붙은 직각삼각형
function star1(n)
for y=1:n
for x=1:n
  if x < y
  fprintf('*');
  end
end
fprintf('\n');
end
end

% 오른쪽 붙은 직각삼각형
function star2(n)
for y=1:n
for x=1:n
  if n-x < y
    fprintf('*');
  else
    fprintf(' ');
  end
end
fprintf('\n');
end
end

% 왼쪽 붙은 직각삼각형
function star3(n)
x = [];
for i = 1 : n
    x = strcat(x,'*');
    disp(x)
end
end

% 오른쪽 붙은 직각삼각형
function star4(n)
x = [];
for i = 1 : n
    x = strcat(x,'*');
    s = [blanks(n-i) x];
    disp(s)
end
end

% 정삼각형
function star5(n)

x = [];
for i = 1 : n
    x = strcat(x,'*');
    s = [blanks(n-i) x];
    if i == 1
      disp([s]); % no symmetry print in first line
    end
    disp([s fliplr(s)])
end
end
</pre>

